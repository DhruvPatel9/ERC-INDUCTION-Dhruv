int trigf =8 ;
int echof=9 ;
int durationf;
int distance;  // forward distance
int trigb=7 ;
int echob=6 ;
int durationb;
int distback; //distance back
int trigl=12 ;
int echol=11 ;
int durationl;
int distleft;//distance left
int trigr=4 ;
int echor=5 ;
int durationr;
int distright;//distance right





int forwardleft=2;
int backwardleft=13;
int forwardright=1;
int backwardright=0;
int speedleft=10;
int speedright=3;

void setup(){
    //motor setup
  pinMode(forwardleft,OUTPUT);
  pinMode(backwardleft ,OUTPUT);
  pinMode(forwardright ,OUTPUT);
  pinMode(backwardright ,OUTPUT);
  pinMode(speedleft  ,OUTPUT);
  pinMode(speedright  ,OUTPUT);
  pinMode(trigf, OUTPUT);  //sensor setup
    pinMode(echof, INPUT); 
  pinMode(trigb, OUTPUT);  
    pinMode(echob, INPUT); 
  pinMode(trigl, OUTPUT);  
    pinMode(echol, INPUT); 
  pinMode(trigr, OUTPUT);  
    pinMode(echor, INPUT);
  
  
  
  
  
  
  
  
  
  
}
 


  void loop(){
    distleft=5;
    distright=5;
    delay(50);
    if(distance <= 20){
      movestop();
      delay(300);
      gobackward();
      delay(500);//as per turn requirments
      movestop();
      distright=lookright();
      delay(100);
      distleft=lookleft();
      delay(100);
       
      if(distleft <20 && distright<20){
      gobackward();
        delay(500);
       movestop();
      }
      else if(distance <=distleft)
        {turnleft();
         delay(400);//depends on differential drive 
         movestop();
        }
      else{turnright();
           delay(400);//depends on differential drive 
           movestop();
          }
    }
    else{goforward();
        }
    distance=lookahead();
  }

int lookahead(){
    delay(500);
    distance = 0;  
    durationf = 0;  
    digitalWrite(trigf, LOW);  
    delayMicroseconds(2);  
    digitalWrite(trigf, HIGH);  
    delayMicroseconds(10);  
    digitalWrite(trigf, LOW);  
    durationl = pulseIn(echof, HIGH);  
    // Convert in CM  
    distance = (durationl / 2) / 29.1;
  return distance;
}
int lookleft(){
    delay(500);
    distleft = 0;  
    durationl = 0;  
    digitalWrite(trigl, LOW);  
    delayMicroseconds(2);  
    digitalWrite(trigl, HIGH);  
    delayMicroseconds(10);  
    digitalWrite(trigl, LOW);  
    durationl = pulseIn(echol, HIGH);  
    // Convert in CM  
    distleft = (durationl / 2) / 29.1;
  return distleft;
}
int lookright(){
    delay(500);
    distright = 0;  
    durationr = 0;  
    digitalWrite(trigr, LOW);  
    delayMicroseconds(2);  
    digitalWrite(trigr, HIGH);  
    delayMicroseconds(10);  
    digitalWrite(trigr, LOW);  
    durationr = pulseIn(echor, HIGH);  
    // Convert in CM  
    distright = (durationr / 2) / 29.1;
  return distright;
}
int lookback(){
    delay(500);
    distback = 0;  
    durationb = 0;  
    digitalWrite(trigb, LOW);  
    delayMicroseconds(2);  
    digitalWrite(trigb, HIGH);  
    delayMicroseconds(10);  
    digitalWrite(trigb, LOW);  
    durationb = pulseIn(echor, HIGH);  
    // Convert in CM  
    distback = (durationb / 2) / 29.1;
  return distback;
}
 
void goforward(){                    //for moving forward
  digitalWrite(forwardleft,HIGH); //left mptor
  digitalWrite(backwardleft,LOW);
  analogWrite(speedleft,127);
   digitalWrite(forwardright,HIGH);//right motor
   digitalWrite(backwardright,LOW);
  analogWrite(speedright,127);
 }
  
void gobackward(){                   //for moving backward
  
    digitalWrite(forwardleft,LOW);
    digitalWrite(backwardleft,HIGH);
    digitalWrite(forwardright,LOW);
    digitalWrite(backwardright,HIGH);
    analogWrite(speedleft,127);
    analogWrite(speedright,127);
   
  
}
void turnleft(){                       //for turning left
  digitalWrite(forwardleft,HIGH);
    digitalWrite(backwardleft,LOW);
    digitalWrite(forwardright,HIGH);
    digitalWrite(backwardright,LOW);
    analogWrite(speedleft,31);
    analogWrite(speedright,63);
  
}
void turnright(){                       //for turning right
  digitalWrite(forwardleft,HIGH);
    digitalWrite(backwardleft,LOW);
    digitalWrite(forwardright,HIGH);
    digitalWrite(backwardright,LOW);
    analogWrite(speedleft,63);
    analogWrite(speedright,31);
}
void movestop(){                      //for stopping bot
  digitalWrite(forwardleft,LOW);
    digitalWrite(backwardleft,LOW);
    digitalWrite(forwardright,LOW);
    digitalWrite(backwardright,LOW);
}
  
  